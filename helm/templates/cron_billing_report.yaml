apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ .Values.report.name }}
  namespace: "jarvice-system"
spec:
  schedule: "{{ .Values.report.cronschedule }}"
  failedJobsHistoryLimit: 50
  successfulJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 45
  suspend: false
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: jarvice-system
          containers:
          - name: {{ .Values.report.name }}
            image: {{ .Values.report.image }}
            command: [/app/billing_report.py]
            args: ["{{ .Values.report.billingperiod }}"]
            #command: ["tail"]
            #args: ["-f", "/var/log/alternatives.log"]
            env:
            {{ if .Values.report.awsstorage.enabled }}- name: AWS_STORAGE
              value: '{{ .Values.report.awsstorage.enabled }}'
            - name: BC_TAG
              value: '{{ .Values.report.awsstorage.bctag }}'
            - name: NAME_TAG
              value: '{{ .Values.report.awsstorage.nametag }}'{{ end }}
            {{ if .Values.report.gcpstorage.enabled }}- name: GCP_STORAGE
              value: '{{ .Values.report.gcpstorage.enabled }}'
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: '/root/.gcp/{{ .Values.report.gcpstorage.gcpcredfilename }}'
            - name: BQ_DB
              value: '{{ .Values.report.gcpstorage.bigquerydb }}'
            - name: BC_LABEL
              value: '{{ .Values.report.gcpstorage.bclabel }}'
            - name: NAME_LABEL
              value: '{{ .Values.report.gcpstorage.namelabel }}'{{ end }}
            - name: EMAIL_SERVER
              value: '{{ .Values.report.emailserver }}'
            - name: EMAIL_SERVER_USER
              value: '{{ .Values.report.emailserveruser }}'
            - name: EMAIL_SERVER_PASSWORD
              value: '{{ .Values.report.emailserverpassword }}'
            - name: FROM_EMAIL
              value: '{{ .Values.report.fromemail }}'
            - name: EMAIL_LIST
              value: '{{ .Values.report.emaillist }}'
            {{- range $key, $value := $.Values.report.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            volumeMounts:
            {{ if .Values.report.awsstorage.enabled }}- name: {{ .Values.report.awsstorage.awscredsecret }}
              mountPath: /root/.aws{{ end }}
            {{ if .Values.report.gcpstorage.enabled }}- name: {{ .Values.report.gcpstorage.gcpcredsecret }}
              mountPath: /root/.gcp{{ end }}
          volumes:
            {{ if .Values.report.awsstorage.enabled }}- name: {{ .Values.report.awsstorage.awscredsecret }}
              secret:
                secretName: {{ .Values.report.awsstorage.awscredsecret }}{{ end }}
            {{ if .Values.report.gcpstorage.enabled }}- name: {{ .Values.report.gcpstorage.gcpcredsecret }}
              secret:
                secretName: {{ .Values.report.gcpstorage.gcpcredsecret }}{{ end }}
          restartPolicy: Never
          terminationGracePeriodSeconds: 600
